package com.hexagram2021.misc_twf.common.loot;

import net.minecraft.world.item.ItemStack;
import net.minecraft.world.level.storage.loot.LootContext;
import net.minecraft.world.level.storage.loot.predicates.LootItemCondition;
import net.minecraft.world.level.storage.loot.predicates.LootItemConditions;
import net.minecraftforge.common.loot.GlobalLootModifierSerializer;
import net.minecraftforge.common.loot.IGlobalLootModifier;
import org.jetbrains.annotations.NotNull;

import java.util.List;
import java.util.function.Predicate;

public abstract class OrConditionLootModifier implements IGlobalLootModifier {
	protected final LootItemCondition[] conditions;
	private final Predicate<LootContext> combinedConditions;

	/**
	 * Constructs a OrConditionLootModifier.
	 * @param conditionsIn the ILootConditions that need to be matched before the loot is modified.
	 */
	protected OrConditionLootModifier(LootItemCondition[] conditionsIn) {
		this.conditions = conditionsIn;
		this.combinedConditions = LootItemConditions.orConditions(conditionsIn);
	}

	@Override @NotNull
	public final List<ItemStack> apply(List<ItemStack> generatedLoot, LootContext context) {
		return this.combinedConditions.test(context) ? this.doApply(generatedLoot, context) : generatedLoot;
	}

	/**
	 * Applies the modifier to the generated loot (all loot conditions have already been checked
	 * and have returned true).
	 * @param generatedLoot the list of ItemStacks that will be dropped, generated by loot tables
	 * @param context the LootContext, identical to what is passed to loot tables
	 * @return modified loot drops
	 */
	protected abstract List<ItemStack> doApply(List<ItemStack> generatedLoot, LootContext context);

	public static abstract class Serializer<T extends OrConditionLootModifier> extends GlobalLootModifierSerializer<T> {
	}
}
